{
	"__schema" : "4.1",
	"__type" : "page",
	"uid" : {
		"__type" : "uuid",
		"uuid" : "c123b974-b495-0d00-9c56-18330ec582d3"
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "General"
	},
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2022-03-03T11:17:01.59552-05:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2022-03-03T11:19:10.420813-05:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "sKO3drSVDQCcWMjaDsWC0w=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "Globally with {{gtMethod:ObjectiveLepiter class>>database:}}"
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2022-03-03T11:19:19.9334-05:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2024-04-19T21:23:44.341193-04:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "rm4Rf7SVDQCcXLi3DsWC0w=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "Per-object (e.g. for testing) with {{gtMethod:DbTDomainObject>>#lepiterDB:}}"
									}
								]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-03-03T11:16:33.569043-05:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-03-03T11:21:46.883501-05:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "8/u5dLSVDQCcV/e9DsWC0w=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "You can set the Lepiter DB in which pages will be created in two ways:"
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-03-03T11:21:41.013481-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-03-03T11:21:42.564101-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "nQCgh7SVDQCcXSMODsWC0w=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "#Configuration"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-03-03T11:47:01.01793-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-03-03T11:47:04.529262-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "CRhT4rSVDQC7t4o1Drny0A=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "# Loading"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-03-03T11:49:13.049868-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-19T21:28:22.75744-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "crgx6rSVDQC7upOLDrny0A=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "The main challenge is that either the domain model or Lepiter can change out from under the other side without warning, so we don't store any object pointers on either side, only UIDs.\n- Domain Model\n  - has the capability to generate UIDs for certain objects, like LivingLibrary's AuthoredWorks\n  - store the UID of their corresponding Lepiter page, like QuoteMe's Transcripts\n- Lepiter: The Lepiter pages referencing arbitrary objects do so via reference objects that store the object's UID as well as information about how/where to look for the object. See {{gtClass:DbAbstractObjectUIDReference}} for the boilerplate implementation which should be extended in client libraries. An example is [Dynabook](https://github.com/seandenigris/Dynabook)'s {{gtClass:DbObjectUIDReference}}.\n\nIn order for everything to work, things need to be loaded in this order:\n1. Domain model code\n2. Domain model data\n3. Lepiter DB(s) containing custom pages which reference model objects"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-03-03T11:22:35.980822-05:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2024-04-19T21:22:46.811938-04:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "f2u9irSVDQCcX1DrDsWC0w=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "Currently, if you want an object to be able to have an associated Lepiter page, add the {{gtClass:DbTDomainObject}} trait to its class."
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-03-03T11:21:57.226562-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-03-03T11:47:02.463259-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "PMxBiLSVDQCcXpvTDsWC0w=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "# Preparing an Object "
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-03-18T15:30:43.622215-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-03-18T15:34:38.878204-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "3OY86+SWDQCC2uP3D597mQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "## Further Research\nWhile a UID property currently is used to unambiguously identify and link domain model objects to Lepiter pages, could there be another way? Some domain objects inherently have a way to uniquely identify objects (e.g. a transaction number), but how would you do that in e.g. an AddressBook, where multiple people can have the same name? How could you distinguish \"two copies of the same object, possibly with different state\" from \"two logically different objects with the same state\"?"
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2022-03-03T11:16:22.18103-05:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2022-03-03T11:21:36.312032-05:00"
		}
	}
}